import NavBar from 'layout/navbar/NavBar'
import type { NextPage, GetStaticProps } from 'next'
import Head from 'next/head'
import { FaAngleRight, FaAngleLeft, FaCircle, FaRegCircle } from 'react-icons/fa';
import Button from 'react-bootstrap/Button'
import { useState, MouseEvent, useEffect } from 'react'
import styles from '../styles/Home.module.css'
import { introPic } from 'interfaces/interfaces';
import MakeReservation from '../globalBtns/MakeReservation';
import IntroPic from './HomePg/IntroPic';
import Logo from 'layout/Logo';

const Home: NextPage = () => {
  const [pics, setPics] = useState<introPic[]>([{ isOnUI: true, path: "interiorDinningRoom" }, { isOnUI: false, path: "interiorLivingRoom" }, { isOnUI: false, path: "interiorStairs" }, { isOnUI: false, path: "introPic" }])
  const [currentPicIndex, setCurrentPicIndex] = useState(0);


  // GOAL: if the user clicks on n button, the get its index and store it into the currentPicIndex 
  // the pic that the user selected is displayed onto the dom based on what button the user clicked on 
  // the path is passed for the src tag of the image 
  // get the path, access the path
  // the target pic object is accessed 
  // get the target pic
  // the index of the button that was clicked is stored into currentPicIndex state 
  // get the index of the button
  // a button is clicked

  // GOAL: un-highlight the button that was selected 
  // the previous selected button is un-highlighted 
  // the pics state is updated 
  // return the pic that is not on the UI 
  // change isOnUI to false
  // the button that is highlighted is found (or the pic isOnUI is true)
  // using the index of the button that was selected, find the button that is currently high lighted and un-highlighted, find the current pic on the UI 

  // GOAL: highlight the button that was selected 
  // the button that was selected is highlighted based on the index of the pic that will be displayed onto the DOM 
  // the pic that is not selected and but is not the selected pic returned 
  // the pic that is selected, 'isOnUI' is set to true 
  // get the next pic that will be displayed onto the UI by index 
  // the pic that is currently on the UI, 'isOnUI' is set to false 
  // get the pic that is on the ui by the currentPicIndex
  // map through pics 


  const handleBtnClick = (indexOfPicToDisplayOnUI:number) => {
    const _pics = pics.map((pic, index) => {
      if(index === currentPicIndex){
        return {
          ...pic,
          isOnUI: false
        }
      }

      if(index === indexOfPicToDisplayOnUI){
        return {
          ...pic,
          isOnUI: true
        }
      }

      return pic
    })

    setCurrentPicIndex(indexOfPicToDisplayOnUI)
    setPics(_pics)
  }

  useEffect(() => {
    console.log("hey there")
  })



  return (
    <>
      <div className={`${styles.container} noPadding homePage min-vh-100`}>
        <Head>
          <title>Camiguin Lazones Resort Home Page</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {/* ${styles.main} was using this below */}
        <main className="noPadding noMargin d-flex flex-column justify-content-start pb-2 min-vh-100">
          {/* <section className="row noMargin noPadding">
            <section className='border-bottom pt-2 pb-4 col-12'>
              <h1 className={`${styles.title} mt-3 medFontWeight col-12`}>
                Camguin Lazones Resort
              </h1>
            </section>
          </section> */}
          <section className='row noMargin noPadding introPicsSec flex-nowrap'>
            <section className='border-bottom col-12 border noPadding noMargin introPicsSubSec position-relative'>
              {/* {pics.map(({ isOnUI }) => isOnUI ? <IntroPic path={`/imgs/${pics[currentPicIndex].path}.jpeg`} /> : null)} */}

              {/* MAKE THE IMAGE AND THE PIC FLICKER WHEN THE USER CLICKS ON THE BUTTON  */}
              {/* GOAL: make the following three elements below to re-render seperate from the home page component */}
              <img src={`/imgs/${pics[currentPicIndex].path}.jpeg`} alt="camiguin_lazones_resort_introPic" className='w-100 h-100 position-absolute flicker' />
              <div className="overlay position-absolute w-100 h-100 flicker"/>
              <div className='position-absolute bottom-0 d-flex justify-content-center align-items-center w-100 mb-5'>
                <div>
                {pics.map(({ isOnUI, path }, index) => isOnUI ? <FaCircle key={path as string} className="me-1 border-dark" onClick={() => { handleBtnClick(index) }} /> : <FaRegCircle key={path as string} className="me-1 border-dark bg-secondary rounded-circle" onClick={() => { handleBtnClick(index) }}  />)}
                </div>
              </div>
            </section>
          </section>
          <section className='row noMargin noPadding flex-nowrap'>
            <section className='d-flex justify-content-center align-items-center col-12'>
              {/* have an array of dots, if the user is on the specific picture then highlight that dot */}
              <section>
                {/* {pics.map(({ isOnUI, path }) => isOnUI ? <FaCircle key={path as string} className="me-1" /> : <FaRegCircle key={path as string} className="me-1" />)} */}
              </section>
            </section>
          </section>
          {/* <section className='row noMargin noPadding flex-nowrap'>
            <section className="d-flex justify-content-center align-items-center pt-2">
              <Button variant="secondary" className="me-1" onClick={() => { handleBtnClick(-1) }}>
                <FaAngleLeft />
              </Button>
              <Button variant="secondary" className="m-1" onClick={() => { { handleBtnClick(1) } }}>
                <FaAngleRight />
              </Button>
            </section>
          </section> */}
          <section className='row noMargin noPadding flex-nowrap'>
            <section className="d-flex justify-content-center align-items-center pt-4 pe-4 col-12">
              <MakeReservation />
            </section>
          </section>
          
          {/* <section className='row noPadding pitchSec'>
            <div className="curve"/>
            <section className='col-12 d-flex justify-content-center align-items-center'>
                <section className='pt-2'>
                    <Logo width={100} height={100}/>
                </section>
            </section>
            <section className='col-12 d-flex justify-content-center align-items-center'>
                  put an animation of different ways of saying welcome
                  <span className="largerFontSize">Hello!</span>
            </section>
            <section className='col-12'>
                  provide the verbal pitch here
            </section>
          </section> */}
        </main>

        {/* <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{' '}
            <span className={styles.logo}>
              <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
            </span>
          </a>
        </footer> */}
      </div>
    </>
  )
}

export default Home
