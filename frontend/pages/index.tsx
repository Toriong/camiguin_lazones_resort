import NavBar from 'layout/navbar/NavBar'
import type { NextPage, GetStaticProps } from 'next'
import Head from 'next/head'
import { FaAngleRight, FaAngleLeft, FaCircle, FaRegCircle } from 'react-icons/fa';
import Button from 'react-bootstrap/Button'
import { useState, MouseEvent, useEffect } from 'react'
import styles from '../styles/Home.module.css'
import { introPic } from 'interfaces/interfaces';
import MakeReservation from '../globalBtns/MakeReservation';
import IntroPic from './HomePg/IntroPic';

const Home: NextPage = () => {
  const [pics, setPics] = useState<introPic[]>([{ isOnUI: true, path: "interiorDinningRoom" }, { isOnUI: false, path: "interiorLivingRoom" }, { isOnUI: false, path: "interiorStairs" }, { isOnUI: false, path: "introPic" }])
  const [indexPics, setIndexPics] = useState(0);
  const [didFirstRenderOccur, setDidFirstRenderOccur] = useState(false);

  // GOAL: make the intro pics scrollable automatically

  // CASE: the current pic is the last pic of the pics array
  // GOAL: show the first pics of the pics array
  // THE FIRST pics is displayed onto the ui
  // the index is zero
  // the index is the last index of the pics array
  // check if the user is on the last pic


  // CASE: the current pics is the not the last pic of the pics array
  // GOAL: show next pic of the pics array
  // the next pic is displayed onto the UI, increase the index by one
  // the user is not on the last pic of the pics array
  // check if the user is in the last pic of the pics array (if index is equal to zero)


  const displayNextPic = () => {
    const currentFilledInCircleIndex = pics.findIndex(({ isOnUI }) => isOnUI);
    const isUserOnLastPic = currentFilledInCircleIndex === (pics.length - 1)
    const nextCircleToBeFilledInIndex = isUserOnLastPic ? 0 : currentFilledInCircleIndex + 1;
    const _pics = pics.map((pic, index) => {

      if (index === nextCircleToBeFilledInIndex) {
        return {
          ...pic,
          isOnUI: true
        }
      }

      if (index === currentFilledInCircleIndex) {
        return {
          ...pic,
          isOnUI: false
        }
      }

      return pic
    })

    setPics(_pics)
    setIndexPics(nextCircleToBeFilledInIndex)
    console.log("the next pic is displayed.")
  }

  useEffect(() => {
    if (!didFirstRenderOccur) {
      setDidFirstRenderOccur(true)
    } else {
      console.log("hey there")
      let intervalTimer = setInterval(() => {
        console.log("will display the next pic.")
        displayNextPic()
      }, 2000)

      return () => { clearInterval(intervalTimer) }
    }
  }, [indexPics, didFirstRenderOccur])

  return (
    <>
      <div className={`${styles.container} noPadding homePage min-vh-100`}>
        <Head>
          <title>Camiguin Lazones Resort Home Page</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {/* ${styles.main} was using this below */}
        <main className={`noPadding noMargin d-flex flex-column justify-content-start border-bottom pb-2 min-vh-100`}>
          <section className="row noMargin noPadding">
            <section className='border-bottom pt-2 pb-4 col-12'>
              <h1 className={`${styles.title} mt-3 medFontWeight col-12`}>
                Camguin Lazones Resort
              </h1>
            </section>
          </section>
          <section className='row noMargin noPadding introPicsSec flex-nowrap'>
            <section className='border-bottom col-12 border noPadding noMargin introPicsSubSec'>
              {pics.map(({ isOnUI }) => isOnUI ? <IntroPic path={`/imgs/${pics[indexPics].path}.jpeg`} /> : null)}
            </section>
          </section>
          <section className='row noMargin noPadding flex-nowrap'>
            <section className='d-flex justify-content-center align-items-center col-12'>
              {/* have an array of dots, if the user is on the specific picture then highlight that dot */}
              <section>
                {pics.map(({ isOnUI, path }) => isOnUI ? <FaCircle key={path as string} className="me-1" /> : <FaRegCircle key={path as string} className="me-1" />)}
              </section>
            </section>
          </section>
          {/* <section className='row noMargin noPadding flex-nowrap'>
            <section className="d-flex justify-content-center align-items-center pt-2">
              <Button variant="secondary" className="me-1" onClick={() => { handleBtnClick(-1) }}>
                <FaAngleLeft />
              </Button>
              <Button variant="secondary" className="m-1" onClick={() => { { handleBtnClick(1) } }}>
                <FaAngleRight />
              </Button>
            </section>
          </section> */}
          <section className='row noMargin noPadding flex-nowrap'>
            <section className="d-flex justify-content-center align-items-center pt-4 pe-4">
              <MakeReservation />
            </section>
          </section>
        </main>

        {/* <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{' '}
            <span className={styles.logo}>
              <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
            </span>
          </a>
        </footer> */}
      </div>
    </>
  )
}

export default Home
